//Source code generated by AppGPT (www.appgpt.tech)

//Class to create tables and seed new database
import { DataSource } from 'typeorm';
import { DBConfiguration } from './Configuration';
import { SettingsEntity } from './db/Settings.entity';
//autogenerate imports based on resources
import { booksEntity } from './db/books.entity';

export class Database {
  static dbConfiguration: DBConfiguration;
  public static ds: DataSource;

  static async Initialize(dbConfiguration: DBConfiguration) {
    Database.dbConfiguration = dbConfiguration;
    let dbConfig: any = dbConfiguration as any;
    //Autogenerate entities array from resource names

    dbConfig.entities = [SettingsEntity, booksEntity];
    Database.ds = new DataSource(dbConfig);
    await Database.ds.initialize();

    //TODO: Drop all tables

    await Database.Seed();
  }
  static async Seed() {
    let data: any = {
      books: [
        {
          Title: 'Title 1',
          Author: 'Author 1',
          ISBN: 'ISBN 1',
          ReleaseDate: '2025-01-11T20:24:36.294Z',
          Description: 'Description 1',
          AvailabilityStatus: true,
          date1: '2024-07-12T11:07:31.204Z',
          id: 87,
        },
        {
          Title: 'Title 2',
          Author: 'Author 2',
          ISBN: 'ISBN 2',
          ReleaseDate: '2024-06-23T02:50:08.405Z',
          Description: 'Description 2',
          AvailabilityStatus: false,
          date1: '2024-08-08T22:23:21.143Z',
          id: 58,
        },
        {
          Title: 'Title 3',
          Author: 'Author 3',
          ISBN: 'ISBN 3',
          ReleaseDate: '2025-01-16T11:10:17.518Z',
          Description: 'Description 3',
          AvailabilityStatus: false,
          date1: '2024-02-24T13:33:40.735Z',
          id: 15,
        },
        {
          Title: 'Title 4',
          Author: 'Author 4',
          ISBN: 'ISBN 4',
          ReleaseDate: '2023-08-03T23:41:32.473Z',
          Description: 'Description 4',
          AvailabilityStatus: true,
          date1: '2024-03-19T07:24:11.746Z',
          id: 3,
        },
        {
          Title: 'Title 5',
          Author: 'Author 5',
          ISBN: 'ISBN 5',
          ReleaseDate: '2023-04-26T04:35:07.352Z',
          Description: 'Description 5',
          AvailabilityStatus: true,
          date1: '2023-05-25T03:14:24.378Z',
          id: 81,
        },
      ],
    };
    //Autogenerate multiple such calls ie for each resource and its data object
    let isSeeded = await this.IsSeeded();
    //if (!isSeeded) {
    //forcing app recreation
    if (true) {
      console.log('   Seeding database...');
      await this.SeedResource('booksEntity', data.books);
      await this.SeedResource('SettingsEntity', {
        settingname: 'isSeeded',
        settingvalue: 'true',
      });
    } else {
      console.log('   Database seeded already!');
    }
  }
  static async IsSeeded() {
    const repo = Database.ds.getRepository('SettingsEntity');
    let rec: any = await repo.findOne({
      select: {
        settingname: true,
        settingvalue: true,
      },
      where: {
        settingname: 'isSeeded',
      },
    });
    if (rec && rec.settingvalue) return true;
    return false;
  }
  static async SeedResource(resourceName: any, resourceData: any) {
    const repo = Database.ds.getRepository(resourceName);
    //await repo.clear();
    console.log('   Seeding table ' + resourceName);
    await repo.upsert(resourceData, ['id']);
  }
}
